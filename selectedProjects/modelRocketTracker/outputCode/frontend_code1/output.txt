{
"files":{
"frontend/src/services/api.js":"import axios from 'axios';const API_URL='http://localhost:3000/api';const api=axios.create({baseURL:API_URL});api.interceptors.request.use((config)=>{const token=localStorage.getItem('token');if(token)config.headers.Authorization=`Bearer ${token}`;return config;});const auth={login:(data)=>api.post('/auth/login',data).then(res=>res.data),register:(data)=>api.post('/auth/register',data).then(res=>res.data)};const projects={getAll:()=>api.get('/projects').then(res=>res.data),getById:(id)=>api.get(`/projects/${id}`).then(res=>res.data),create:(data)=>api.post('/projects',data).then(res=>res.data)};const tasks={create:(data)=>api.post('/tasks',data).then(res=>res.data),update:(id,data)=>api.put(`/tasks/${id}`,data).then(res=>res.data)};export{auth,projects,tasks};",
"frontend/src/context/AuthContext.js":"import React,{createContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';export const AuthContext=createContext();export const AuthProvider=({children})=>{const[user,setUser]=useState(null);const navigate=useNavigate();useEffect(()=>{const savedUser=localStorage.getItem('user');const token=localStorage.getItem('token');if(savedUser&&token)setUser(JSON.parse(savedUser));},[]);const login=(userData)=>{setUser(userData.user);localStorage.setItem('user',JSON.stringify(userData.user));localStorage.setItem('token',userData.token);navigate('/dashboard');};const logout=()=>{setUser(null);localStorage.removeItem('user');localStorage.removeItem('token');navigate('/login');};return(<AuthContext.Provider value={{user,login,logout}}>{children}</AuthContext.Provider>);};",
"frontend/src/hooks/useAuth.js":"import{useContext}from'react';import{AuthContext}from'../context/AuthContext';export const useAuth=()=>{const context=useContext(AuthContext);if(!context)throw new Error('useAuth must be used within an AuthProvider');return context;};",
"frontend/src/components/auth/LoginForm.js":"import React from'react';import{Form}from'@rjsf/mui';import{auth}from'../../services/api';import{useAuth}from'../../hooks/useAuth';import{Card,CardContent,Typography}from'@mui/material';import validator from'@rjsf/validator-ajv8';const schema={type:'object',required:['email','password'],properties:{email:{type:'string',format:'email',title:'Email'},password:{type:'string',title:'Password'}}};const uiSchema={'ui:submitButtonOptions':{props:{variant:'contained',color:'primary'},norender:false,submitText:'Login'}};export const LoginForm=()=>{const{login}=useAuth();const onSubmit=async({formData})=>{try{const data=await auth.login(formData);login(data);}catch(error){console.error('Login failed:',error);}};return(<Card sx={{maxWidth:400,margin:'auto',mt:4}}><CardContent><Typography variant='h5'gutterBottom>Login</Typography><Form schema={schema}uiSchema={uiSchema}validator={validator}onSubmit={onSubmit}/></CardContent></Card>);};",
"frontend/src/components/auth/SignupForm.js":"import React from'react';import{Form}from'@rjsf/mui';import{auth}from'../../services/api';import{useAuth}from'../../hooks/useAuth';import{Card,CardContent,Typography}from'@mui/material';import validator from'@rjsf/validator-ajv8';const schema={type:'object',required:['email','password','name'],properties:{name:{type:'string',title:'Name'},email:{type:'string',format:'email',title:'Email'},password:{type:'string',title:'Password'}}};const uiSchema={'ui:submitButtonOptions':{props:{variant:'contained',color:'primary'},norender:false,submitText:'Sign Up'}};export const SignupForm=()=>{const{login}=useAuth();const onSubmit=async({formData})=>{try{const data=await auth.register(formData);login(data);}catch(error){console.error('Signup failed:',error);}};return(<Card sx={{maxWidth:400,margin:'auto',mt:4}}><CardContent><Typography variant='h5'gutterBottom>Sign Up</Typography><Form schema={schema}uiSchema={uiSchema}validator={validator}onSubmit={onSubmit}/></CardContent></Card>);};",
"frontend/src/components/layout/Header.js":"import React,{useState}from'react';import{AppBar,Toolbar,Typography,Button,IconButton,Menu,MenuItem,Avatar}from'@mui/material';import{useNavigate}from'react-router-dom';import{useAuth}from'../../hooks/useAuth';export const Header=({title,menuItems})=>{const{user,logout}=useAuth();const navigate=useNavigate();const[anchorEl,setAnchorEl]=useState(null);const handleMenu=(event)=>setAnchorEl(event.currentTarget);const handleClose=()=>setAnchorEl(null);const handleMenuClick=(path)=>{handleClose();navigate(path);};const handleLogout=()=>{handleClose();logout();};return(<AppBar position='static'><Toolbar><Typography variant='h6'component='div'sx={{flexGrow:1}}>{title}</Typography>{menuItems?.map((item)=>(<Button key={item.path}color='inherit'onClick={()=>navigate(item.path)}>{item.label}</Button>))}{user&&(<><IconButton onClick={handleMenu}color='inherit'><Avatar sx={{width:32,height:32}}>{user.name?.[0]}</Avatar></IconButton><Menu anchorEl={anchorEl}open={Boolean(anchorEl)}onClose={handleClose}><MenuItem onClick={()=>handleMenuClick('/profile')}>Profile</MenuItem><MenuItem onClick={handleLogout}>Logout</MenuItem></Menu></>)}</Toolbar></AppBar>);};"
},
"commands":["npx create-react-app frontend --template typescript","cd frontend && npm install @mui/material @emotion/react @emotion/styled @mui/icons-material","cd frontend && npm install react-router-dom axios @tanstack/react-query","cd frontend && npm install @rjsf/core @rjsf/utils @rjsf/validator-ajv8 @rjsf/mui","cd frontend && npm install recharts"]
}