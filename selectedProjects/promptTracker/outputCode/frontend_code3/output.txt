{
"files":{
"frontend/src/theme.js":"import{createTheme}from'@mui/material/styles';export default createTheme({palette:{primary:{main:'#1976d2'},secondary:{main:'#dc004e'}},typography:{fontFamily:['Roboto','Arial','sans-serif'].join(',')},components:{MuiButton:{styleOverrides:{root:{textTransform:'none'}}},MuiCard:{styleOverrides:{root:{borderRadius:8}}}}});",
"frontend/src/pages/Dashboard.js":"import React from'react';import{Box,Grid}from'@mui/material';import Header from'../components/common/Header';import MetricsCard from'../components/metrics/MetricsCard';import PromptGrid from'../components/prompts/PromptGrid';import{useQuery,useMutation,useQueryClient}from'react-query';import api from'../services/api';import LoadingState from'../components/common/LoadingState';const Dashboard=()=>{const queryClient=useQueryClient();const{data:prompts,isLoading}=useQuery('prompts',()=>api.get('/prompts'));const deleteMutation=useMutation((id)=>api.delete(`/prompts/${id}`),{onSuccess:()=>queryClient.invalidateQueries('prompts')});if(isLoading)return<LoadingState/>;const metrics={totalPrompts:prompts?.length||0,avgRating:prompts?.reduce((acc,curr)=>acc+curr.averageRating,0)/prompts?.length||0,chainCount:prompts?.filter(p=>p.Chains?.length>0).length||0};return(<Box><Header title='Dashboard' menuItems={[{label:'Chains',path:'/chains'},{label:'Admin',path:'/admin'}]}/><Grid container spacing={2} sx={{p:2}}><Grid item xs={12} md={4}><MetricsCard title='Total Prompts' value={metrics.totalPrompts}/></Grid><Grid item xs={12} md={4}><MetricsCard title='Average Rating' value={metrics.avgRating.toFixed(1)}/></Grid><Grid item xs={12} md={4}><MetricsCard title='Chain Prompts' value={metrics.chainCount}/></Grid><Grid item xs={12}><PromptGrid prompts={prompts} onDelete={(prompt)=>deleteMutation.mutate(prompt.id)}/></Grid></Grid></Box>);};export default Dashboard;",
"frontend/src/pages/ChainView.js":"import React from'react';import{Box,Grid}from'@mui/material';import Header from'../components/common/Header';import ChainGrid from'../components/chains/ChainGrid';import{useQuery,useMutation,useQueryClient}from'react-query';import api from'../services/api';import LoadingState from'../components/common/LoadingState';const ChainView=()=>{const queryClient=useQueryClient();const{data:chains,isLoading}=useQuery('chains',()=>api.get('/chains'));const deleteMutation=useMutation((id)=>api.delete(`/chains/${id}`),{onSuccess:()=>queryClient.invalidateQueries('chains')});if(isLoading)return<LoadingState/>;return(<Box><Header title='Chain View' menuItems={[{label:'Dashboard',path:'/dashboard'},{label:'Admin',path:'/admin'}]}/><Grid container spacing={2} sx={{p:2}}><Grid item xs={12}><ChainGrid chains={chains} onDelete={(chain)=>deleteMutation.mutate(chain.id)}/></Grid></Grid></Box>);};export default ChainView;",
"frontend/src/pages/AdminPanel.js":"import React from'react';import{Box,Grid}from'@mui/material';import Header from'../components/common/Header';import UserGrid from'../components/admin/UserGrid';import{useQuery}from'react-query';import api from'../services/api';import LoadingState from'../components/common/LoadingState';import useAuth from'../hooks/useAuth';import{Navigate}from'react-router-dom';const AdminPanel=()=>{const{user}=useAuth();const{data:users,isLoading}=useQuery('users',()=>api.get('/users'));if(user?.role!=='admin')return<Navigate to='/dashboard'/>;if(isLoading)return<LoadingState/>;return(<Box><Header title='Admin Panel' menuItems={[{label:'Dashboard',path:'/dashboard'},{label:'Chains',path:'/chains'}]}/><Grid container spacing={2} sx={{p:2}}><Grid item xs={12}><UserGrid users={users}/></Grid></Grid></Box>);};export default AdminPanel;",
"frontend/src/pages/NotFound.js":"import React from'react';import{Box,Typography,Button}from'@mui/material';import{useNavigate}from'react-router-dom';const NotFound=()=>{const navigate=useNavigate();return(<Box sx={{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',height:'100vh'}}><Typography variant='h1'>404</Typography><Typography variant='h4'>Page Not Found</Typography><Button variant='contained' onClick={()=>navigate(-1)} sx={{mt:2}}>Go Back</Button></Box>);};export default NotFound;",
"frontend/src/App.js":"import React from'react';import{Routes,Route,Navigate}from'react-router-dom';import{ThemeProvider}from'@mui/material/styles';import{CssBaseline}from'@mui/material';import theme from'./theme';import Login from'./components/auth/Login';import Signup from'./components/auth/Signup';import Dashboard from'./pages/Dashboard';import ChainView from'./pages/ChainView';import AdminPanel from'./pages/AdminPanel';import NotFound from'./pages/NotFound';import useAuth from'./hooks/useAuth';const PrivateRoute=({children})=>{const{user,loading}=useAuth();if(loading)return null;return user?children:<Navigate to='/login'/>;};const App=()=>{const{user}=useAuth();return(<ThemeProvider theme={theme}><CssBaseline/><Routes><Route path='/login' element={user?<Navigate to='/dashboard'/>:<Login/>}/><Route path='/signup' element={user?<Navigate to='/dashboard'/>:<Signup/>}/><Route path='/dashboard' element={<PrivateRoute><Dashboard/></PrivateRoute>}/><Route path='/chains' element={<PrivateRoute><ChainView/></PrivateRoute>}/><Route path='/admin' element={<PrivateRoute><AdminPanel/></PrivateRoute>}/><Route path='/' element={<Navigate to={user?'/dashboard':'/login'}/>}/><Route path='*' element={<NotFound/>}/></Routes></ThemeProvider>);};export default App;",
"frontend/src/index.js":"import React from'react';import ReactDOM from'react-dom';import{BrowserRouter}from'react-router-dom';import{QueryClient,QueryClientProvider}from'react-query';import App from'./App';import{AuthProvider}from'./context/AuthContext';import ErrorBoundary from'./components/common/ErrorBoundary';const queryClient=new QueryClient();ReactDOM.render(<React.StrictMode><ErrorBoundary><BrowserRouter><AuthProvider><QueryClientProvider client={queryClient}><App/></QueryClientProvider></AuthProvider></BrowserRouter></ErrorBoundary></React.StrictMode>,document.getElementById('root'));"
},
"commands":["cd frontend && npm install react-query @mui/lab","cd frontend && npm install @emotion/react @emotion/styled","cd frontend && npm install @mui/x-data-grid","cd frontend && npm install recharts"]
}