import axios from 'axios';
const API_URL = 'http://localhost:3000/api';
const api = axios.create({baseURL: API_URL});
api.interceptors.request.use((config) => {const token = localStorage.getItem('token');if (token) {config.headers.Authorization = `Bearer ${token}`;}return config;});
export const login = async (credentials) => {const response = await api.post('/auth/login', credentials);return response.data;};
export const register = async (userData) => {const response = await api.post('/auth/register', userData);return response.data;};
export const getRecommendations = async () => {const response = await api.get('/recommendations');return response.data;};
export const createRecommendation = async (data) => {const response = await api.post('/recommendations', data);return response.data;};
export const getFriends = async () => {const response = await api.get('/friendships/friends');return response.data;};
export const sendFriendRequest = async (friendId) => {const response = await api.post(`/friendships/request/${friendId}`);return response.data;};
export const acceptFriendRequest = async (userId) => {const response = await api.put(`/friendships/accept/${userId}`);return response.data;};
export const getContent = async () => {const response = await api.get('/content');return response.data;};
export const removeContent = async (contentId) => {const response = await api.delete(`/content/${contentId}`);return response.data;};
export const updateUser = async (userId, data) => {const response = await api.put(`/users/${userId}`, data);return response.data;};
export const updateProfile = async (data) => {const response = await api.put('/profile', data);return response.data;};
export const getUsers = async () => {const response = await api.get('/users');return response.data;};