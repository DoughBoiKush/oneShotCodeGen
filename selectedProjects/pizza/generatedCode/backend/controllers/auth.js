const db = require('../models');const bcrypt = require('bcryptjs');const jwt = require('jsonwebtoken');exports.login = async (req, res) => {try {const user = await db.User.findOne({ where: { email: req.body.email }});if (!user || !bcrypt.compareSync(req.body.password, user.password)) return res.status(401).json({ message: 'Invalid credentials' });const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET, { expiresIn: '24h' });res.json({ token, user: { id: user.id, email: user.email, name: user.name, isAdmin: user.isAdmin }});} catch (error) {res.status(500).json({ message: 'Server error' });}};exports.register = async (req, res) => {try {const user = await db.User.create({...req.body,password: bcrypt.hashSync(req.body.password, 8)});const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET, { expiresIn: '24h' });res.status(201).json({ token, user: { id: user.id, email: user.email, name: user.name, isAdmin: user.isAdmin }});} catch (error) {res.status(500).json({ message: 'Server error' })}};