```json
{
    "files": {
        "frontend/src/services/authService.js": "import axios from 'axios';const API_URL = 'http://localhost:3000/api';export const login = async (credentials) => {const { data } = await axios.post(`${API_URL}/login`, credentials);return data;};export const signup = async (userData) => {const { data } = await axios.post(`${API_URL}/signup`, userData);return data;};",
        "frontend/src/services/userService.js": "import axios from 'axios';const API_URL = 'http://localhost:3000/api';export const getAllUsers = async (token) => {const { data } = await axios.get(`${API_URL}/users`, { headers: { Authorization: `Bearer ${token}` } });return data;};",
        "frontend/src/services/expenseService.js": "import axios from 'axios';const API_URL = 'http://localhost:3000/api';export const getExpenses = async (token) => {const { data } = await axios.get(`${API_URL}/expenses`, { headers: { Authorization: `Bearer ${token}` } });return data;};export const submitExpense = async (expenseData, token) => {const { data } = await axios.post(`${API_URL}/expenses`, expenseData, { headers: { Authorization: `Bearer ${token}` } });return data;};",
        "frontend/src/context/AuthContext.js": "import { createContext, useState } from 'react';import { useNavigate } from 'react-router-dom';export const AuthContext = createContext();export const AuthProvider = ({ children }) => {const [user, setUser] = useState(null);const navigate = useNavigate();const login = (userData) => {setUser(userData);localStorage.setItem('token', userData.token);};const logout = () => {setUser(null);localStorage.removeItem('token');navigate('/');};return (<AuthContext.Provider value={{ user, login, logout }}>{children}</AuthContext.Provider>);};",
        "frontend/src/hooks/useAuth.js": "import { useContext } from 'react';import { AuthContext } from '../context/AuthContext';export const useAuth = () => useContext(AuthContext);",
        "frontend/src/hooks/useFetch.js": "import useSWR from 'swr';import axios from 'axios';export const useFetch = (url, token) => {const fetcher = (url) => axios.get(url, { headers: { Authorization: `Bearer ${token}` } }).then((res) => res.data);const { data, error, isLoading } = useSWR(url, fetcher);return { data, error, isLoading };};",
        "frontend/src/components/Login.js": "import { useState } from 'react';import { useAuth } from '../hooks/useAuth';import { login } from '../services/authService';import { useNavigate } from 'react-router-dom';import { Box, TextField, Button, Typography, Stack } from '@mui/material';const Login = () => {const [email, setEmail] = useState('');const [password, setPassword] = useState('');const [error, setError] = useState('');const { login: loginUser } = useAuth();const navigate = useNavigate();const handleSubmit = async (e) => {e.preventDefault();try {const data = await login({ email, password });loginUser(data);navigate('/dashboard');} catch {setError('Invalid credentials');}};return (<Box sx={{ maxWidth: 400, mx: 'auto', p: 3, mt: 5, boxShadow: 3 }}> <Typography variant=\"h4\" mb={2}>Login</Typography> <Stack spacing={2}> <TextField label=\"Email\" fullWidth value={email} onChange={(e) => setEmail(e.target.value)} /> <TextField label=\"Password\" type=\"password\" fullWidth value={password} onChange={(e) => setPassword(e.target.value)} /> {error && <Typography color=\"error\">{error}</Typography>} <Button variant=\"contained\" onClick={handleSubmit}>Login</Button> </Stack> </Box>);};export default Login;",
        "frontend/src/components/Signup.js": "import { useState } from 'react';import { signup } from '../services/authService';import { useNavigate } from 'react-router-dom';import { Box, TextField, Button, Typography, Stack } from '@mui/material';const Signup = () => {const [name, setName] = useState('');const [email, setEmail] = useState('');const [password, setPassword] = useState('');const [error, setError] = useState('');const navigate = useNavigate();const handleSubmit = async (e) => {e.preventDefault();try {await signup({ name, email, password });navigate('/');} catch {setError('Signup failed');}};return (<Box sx={{ maxWidth: 400, mx: 'auto', p: 3, mt: 5, boxShadow: 3 }}> <Typography variant=\"h4\" mb={2}>Signup</Typography> <Stack spacing={2}> <TextField label=\"Name\" fullWidth value={name} onChange={(e) => setName(e.target.value)} /> <TextField label=\"Email\" fullWidth value={email} onChange={(e) => setEmail(e.target.value)} /> <TextField label=\"Password\" type=\"password\" fullWidth value={password} onChange={(e) => setPassword(e.target.value)} /> {error && <Typography color=\"error\">{error}</Typography>} <Button variant=\"contained\" onClick={handleSubmit}>Signup</Button> </Stack> </Box>);};export default Signup;",
        "frontend/src/components/Header.js": "import { AppBar, Toolbar, Typography, Menu, MenuItem, IconButton, Avatar, Box, Button } from '@mui/material';import { useState } from 'react';import { useNavigate } from 'react-router-dom';import { useAuth } from '../hooks/useAuth';const Header = () => {const { user, logout } = useAuth();const navigate = useNavigate();const [anchorEl, setAnchorEl] = useState(null);const handleMenuOpen = (event) => setAnchorEl(event.currentTarget);const handleMenuClose = () => setAnchorEl(null);const handleLogout = () => {logout();navigate('/');};return (<AppBar position=\"static\"> <Toolbar> <Typography variant=\"h6\" sx={{ flexGrow: 1, cursor: 'pointer' }} onClick={() => navigate('/dashboard')}>Team Expense Management Portal</Typography> <Box sx={{ display: 'flex', alignItems: 'center' }}> <Button color=\"inherit\" onClick={() => navigate('/dashboard')}>Dashboard</Button> <Button color=\"inherit\" onClick={() => navigate('/profile')}>Profile</Button> {user?.role === 'admin' && <Button color=\"inherit\" onClick={() => navigate('/admin')}>Admin Panel</Button>} <IconButton onClick={handleMenuOpen}><Avatar /></IconButton> <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}> <MenuItem onClick={() => navigate('/profile')}>Profile</MenuItem> <MenuItem onClick={handleLogout}>Logout</MenuItem> </Menu> </Box> </Toolbar> </AppBar>);};export default Header;"
    },
    "commands": ["npx create-react-app frontend","cd frontend && npm install @mui/material @emotion/react @emotion/styled @mui/icons-material axios react-router-dom swr @mui/x-data-grid @rjsf/core @rjsf/utils @rjsf/validator-ajv8 @rjsf/mui"]
}
```