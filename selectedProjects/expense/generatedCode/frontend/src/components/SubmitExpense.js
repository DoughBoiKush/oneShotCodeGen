import { useState } from 'react';import { Box, Typography, Snackbar, Alert } from '@mui/material';import Form from '@rjsf/mui';import { submitExpense } from '../services/expenseService';import validator from '@rjsf/validator-ajv8';const SubmitExpense = () => {const [success, setSuccess] = useState(false);const [error, setError] = useState(false);const token = localStorage.getItem('token');const schema = { type: 'object', properties: { title: { type: 'string', title: 'Expense Title' }, amount: { type: 'number', title: 'Amount' }, category: { type: 'string', title: 'Category', enum: ['Food', 'Travel', 'Miscellaneous'] }, date: { type: 'string', title: 'Date', format: 'date' }, receipt: { type: 'string', title: 'Receipt (optional)' } }, required: ['title', 'amount', 'category', 'date'] };const uiSchema = { receipt: { 'ui:widget': 'file' } };const handleSubmit = async ({ formData }) => {try {await submitExpense(formData, token);setSuccess(true);} catch {setError(true);}};return (<Box sx={{ p: 3 }}> <Typography variant="h4" mb={2}>Submit Expense</Typography> <Form schema={schema} uiSchema={uiSchema} validator={validator} onSubmit={handleSubmit} /> <Snackbar open={success} autoHideDuration={3000} onClose={() => setSuccess(false)}> <Alert severity="success">Expense submitted successfully!</Alert> </Snackbar> <Snackbar open={error} autoHideDuration={3000} onClose={() => setError(false)}> <Alert severity="error">Failed to submit expense!</Alert> </Snackbar> </Box>);};export default SubmitExpense;