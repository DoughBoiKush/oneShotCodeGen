import { Box, Typography, Snackbar, Alert } from '@mui/material';import Form from '@rjsf/mui';import validator from '@rjsf/validator-ajv8';import { useState } from 'react';const ProfilePage = () => {const token = localStorage.getItem('token');const schema = {type: 'object',properties: {name: {type: 'string',title: 'Name'},department: {type: 'string',title: 'Department'},role: {type: 'string',title: 'Role'}},required: ['name', 'department']};const [success, setSuccess] = useState(false);const [error, setError] = useState(false);const handleSubmit = async ({ formData }) => {try {await fetch('http://localhost:3000/api/users', {method: 'PUT',headers: {'Authorization': `Bearer ${token}`,'Content-Type': 'application/json'},body: JSON.stringify(formData)});setSuccess(true);} catch {setError(true);}};return (<Box sx={{ p: 3 }}> <Typography variant="h4" mb={2}>Edit Profile</Typography> <Form schema={schema} validator={validator} onSubmit={handleSubmit} /> <Snackbar open={success} autoHideDuration={3000} onClose={() => setSuccess(false)}> <Alert severity="success">Profile updated successfully!</Alert> </Snackbar> <Snackbar open={error} autoHideDuration={3000} onClose={() => setError(false)}> <Alert severity="error">Failed to update profile!</Alert> </Snackbar> </Box>);};export default ProfilePage;